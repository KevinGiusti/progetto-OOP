 USE CASE
Un caso d’uso è un insieme di scenari ( sequenze di azioni)
che hanno in comune uno scopo finale (obiettivo) per un
utente (attore). 
Descrivono l’insieme di funzionalità del sistema come sono percepite dagli utenti.
Caratteristiche : Visione esterna del sistema e nessun dettaglio implementativo.

DIAGRAMMI DEI CASI D’USO
La rappresentazione grafica dei casi d’uso ,mette in evidenza attori e servizi del sistema sul  grafo i cui nodi sono Attori e Use case, gli  Archi del grafo rappresentano la comunicazione tra gli attori e gli use case e i  legami tra gli use case:
->Relazione di estensione
->Relazione di inclusione
->Relazione di generalizzazione
 Il diagramma individua i confini del sistema nello
scenario.
USE CASE: INCLUSIONE 
 Funzionalità comune fra più use case: Evita le ripetizioni e Aumenta il riutilizzo.

A--->B png UseCase da inserire qui_Inclusione
_
_descrizione png :_________________________


USE CASE: ESTENSIONE

Png estensione qui ________________________

Caratteristiche : Aumento delle funzionalità di un use case,l’esecuzione di B interrompe A
 , la responsabilità dei casi di estensione è di chi
estende (B).
 Condizione di estensione:
Determina quando l estensione deve essere utilizzata può anche essere inserita nella descrizione narrativa o nell’icona dello use case.
Quando uno scenario del caso d’uso base raggiunge un punto di
estensione la condizione di estensione è verificata.
Può esistere indipendentemente dagli use case estesi


Analisi parallela :
Fattorizzano comportamenti comuni a più use case
 Differenze
Estensione: l' attore può non eseguire tutte le estensioni

Inclusione: l’attore esegue sempre tutte le inclusioni
Casi di utilizzo:
 Inclusione: una funzionalità si ripete in più use case
Estensione: si vogliono descrivere variazioni dalla
funzionalità standard



USE CASE: GENERALIZZAZIONE
Usato per estendere o modificare caratteristiche base.
Attori:
 A è generalizzazione di B se B è un caso particolare di A
Use Case (raro):
 I casi d’uso figli possono aggiungere funzionalità rispetto ai
 padri, o modificarne il comportamento tutte le funzionalità non ridefinite nel figlio si
mantengono in questo come definite nel padre
-----------------------------png generalizzazione 




